/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(DMO_burst_extract.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3ab8e3bd10d7b53c292ce714665f880f)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/DMO_TETRA/DMO_burst_extract.h>
// pydoc.h is automatically generated in the build directory
#include <DMO_burst_extract_pydoc.h>

void bind_DMO_burst_extract(py::module& m)
{

    using DMO_burst_extract    = ::gr::DMO_TETRA::DMO_burst_extract;


    py::class_<DMO_burst_extract, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<DMO_burst_extract>>(m, "DMO_burst_extract", D(DMO_burst_extract))

        .def(py::init(&DMO_burst_extract::make),
           D(DMO_burst_extract,make)
        )
        



        ;

    py::enum_<::gr::DMO_TETRA::OperationMode>(m,"OperationMode")
        .value("DMO", ::gr::DMO_TETRA::OperationMode::DMO) // 1
        .value("TMO", ::gr::DMO_TETRA::OperationMode::TMO) // 0
        .export_values()
    ;

    py::implicitly_convertible<int, ::gr::DMO_TETRA::OperationMode>();



}








